package com.tw.mapper;

import com.tw.model.OrderGoods;
import com.tw.model.OrderGoodsCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface OrderGoodsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderGoodsSqlProvider.class, method="countByExample")
    long countByExample(OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @DeleteProvider(type=OrderGoodsSqlProvider.class, method="deleteByExample")
    int deleteByExample(OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @Delete({
        "delete from twshop_order_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @Insert({
        "insert into twshop_order_goods (id, order_id, ",
        "goods_id, goods_name, ",
        "goods_sn, product_id, ",
        "number, market_price, ",
        "retail_price, is_real, ",
        "goods_specifition_ids, list_pic_url, ",
        "brand_id, customers, ",
        "customers_name, country, ",
        "province, city, ",
        "district, address, ",
        "mobile, consignee, ",
        "shipping_id, shipping_name, ",
        "shipping_no, shipping_status, ",
        "order_price, goods_price, ",
        "actual_price, goods_specifition_name_value)",
        "values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, ",
        "#{goodsId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, ",
        "#{goodsSn,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, ",
        "#{number,jdbcType=INTEGER}, #{marketPrice,jdbcType=DECIMAL}, ",
        "#{retailPrice,jdbcType=DECIMAL}, #{isReal,jdbcType=BIT}, ",
        "#{goodsSpecifitionIds,jdbcType=VARCHAR}, #{listPicUrl,jdbcType=VARCHAR}, ",
        "#{brandId,jdbcType=INTEGER}, #{customers,jdbcType=VARCHAR}, ",
        "#{customersName,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, ",
        "#{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, ",
        "#{district,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, ",
        "#{shippingId,jdbcType=TINYINT}, #{shippingName,jdbcType=VARCHAR}, ",
        "#{shippingNo,jdbcType=VARCHAR}, #{shippingStatus,jdbcType=INTEGER}, ",
        "#{orderPrice,jdbcType=DECIMAL}, #{goodsPrice,jdbcType=DECIMAL}, ",
        "#{actualPrice,jdbcType=DECIMAL}, #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR})"
    })
    int insert(OrderGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @InsertProvider(type=OrderGoodsSqlProvider.class, method="insertSelective")
    int insertSelective(OrderGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderGoodsSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_sn", property="goodsSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="number", property="number", jdbcType=JdbcType.INTEGER),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="retail_price", property="retailPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="is_real", property="isReal", jdbcType=JdbcType.BIT),
        @Result(column="goods_specifition_ids", property="goodsSpecifitionIds", jdbcType=JdbcType.VARCHAR),
        @Result(column="list_pic_url", property="listPicUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="customers", property="customers", jdbcType=JdbcType.VARCHAR),
        @Result(column="customers_name", property="customersName", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_specifition_name_value", property="goodsSpecifitionNameValue", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<OrderGoods> selectByExampleWithBLOBsWithRowbounds(OrderGoodsCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderGoodsSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_sn", property="goodsSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="number", property="number", jdbcType=JdbcType.INTEGER),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="retail_price", property="retailPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="is_real", property="isReal", jdbcType=JdbcType.BIT),
        @Result(column="goods_specifition_ids", property="goodsSpecifitionIds", jdbcType=JdbcType.VARCHAR),
        @Result(column="list_pic_url", property="listPicUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="customers", property="customers", jdbcType=JdbcType.VARCHAR),
        @Result(column="customers_name", property="customersName", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_specifition_name_value", property="goodsSpecifitionNameValue", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<OrderGoods> selectByExampleWithBLOBs(OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderGoodsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_sn", property="goodsSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="number", property="number", jdbcType=JdbcType.INTEGER),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="retail_price", property="retailPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="is_real", property="isReal", jdbcType=JdbcType.BIT),
        @Result(column="goods_specifition_ids", property="goodsSpecifitionIds", jdbcType=JdbcType.VARCHAR),
        @Result(column="list_pic_url", property="listPicUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="customers", property="customers", jdbcType=JdbcType.VARCHAR),
        @Result(column="customers_name", property="customersName", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL)
    })
    List<OrderGoods> selectByExampleWithRowbounds(OrderGoodsCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderGoodsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_sn", property="goodsSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="number", property="number", jdbcType=JdbcType.INTEGER),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="retail_price", property="retailPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="is_real", property="isReal", jdbcType=JdbcType.BIT),
        @Result(column="goods_specifition_ids", property="goodsSpecifitionIds", jdbcType=JdbcType.VARCHAR),
        @Result(column="list_pic_url", property="listPicUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="customers", property="customers", jdbcType=JdbcType.VARCHAR),
        @Result(column="customers_name", property="customersName", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL)
    })
    List<OrderGoods> selectByExample(OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, order_id, goods_id, goods_name, goods_sn, product_id, number, market_price, ",
        "retail_price, is_real, goods_specifition_ids, list_pic_url, brand_id, customers, ",
        "customers_name, country, province, city, district, address, mobile, consignee, ",
        "shipping_id, shipping_name, shipping_no, shipping_status, order_price, goods_price, ",
        "actual_price, goods_specifition_name_value",
        "from twshop_order_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_sn", property="goodsSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="number", property="number", jdbcType=JdbcType.INTEGER),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="retail_price", property="retailPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="is_real", property="isReal", jdbcType=JdbcType.BIT),
        @Result(column="goods_specifition_ids", property="goodsSpecifitionIds", jdbcType=JdbcType.VARCHAR),
        @Result(column="list_pic_url", property="listPicUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="customers", property="customers", jdbcType=JdbcType.VARCHAR),
        @Result(column="customers_name", property="customersName", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_specifition_name_value", property="goodsSpecifitionNameValue", jdbcType=JdbcType.LONGVARCHAR)
    })
    OrderGoods selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderGoodsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") OrderGoods record, @Param("example") OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderGoodsSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") OrderGoods record, @Param("example") OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderGoodsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") OrderGoods record, @Param("example") OrderGoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderGoodsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OrderGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @Update({
        "update twshop_order_goods",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "goods_id = #{goodsId,jdbcType=VARCHAR},",
          "goods_name = #{goodsName,jdbcType=VARCHAR},",
          "goods_sn = #{goodsSn,jdbcType=VARCHAR},",
          "product_id = #{productId,jdbcType=VARCHAR},",
          "number = #{number,jdbcType=INTEGER},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "retail_price = #{retailPrice,jdbcType=DECIMAL},",
          "is_real = #{isReal,jdbcType=BIT},",
          "goods_specifition_ids = #{goodsSpecifitionIds,jdbcType=VARCHAR},",
          "list_pic_url = #{listPicUrl,jdbcType=VARCHAR},",
          "brand_id = #{brandId,jdbcType=INTEGER},",
          "customers = #{customers,jdbcType=VARCHAR},",
          "customers_name = #{customersName,jdbcType=VARCHAR},",
          "country = #{country,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "shipping_id = #{shippingId,jdbcType=TINYINT},",
          "shipping_name = #{shippingName,jdbcType=VARCHAR},",
          "shipping_no = #{shippingNo,jdbcType=VARCHAR},",
          "shipping_status = #{shippingStatus,jdbcType=INTEGER},",
          "order_price = #{orderPrice,jdbcType=DECIMAL},",
          "goods_price = #{goodsPrice,jdbcType=DECIMAL},",
          "actual_price = #{actualPrice,jdbcType=DECIMAL},",
          "goods_specifition_name_value = #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(OrderGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order_goods
     *
     * @mbg.generated
     */
    @Update({
        "update twshop_order_goods",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "goods_id = #{goodsId,jdbcType=VARCHAR},",
          "goods_name = #{goodsName,jdbcType=VARCHAR},",
          "goods_sn = #{goodsSn,jdbcType=VARCHAR},",
          "product_id = #{productId,jdbcType=VARCHAR},",
          "number = #{number,jdbcType=INTEGER},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "retail_price = #{retailPrice,jdbcType=DECIMAL},",
          "is_real = #{isReal,jdbcType=BIT},",
          "goods_specifition_ids = #{goodsSpecifitionIds,jdbcType=VARCHAR},",
          "list_pic_url = #{listPicUrl,jdbcType=VARCHAR},",
          "brand_id = #{brandId,jdbcType=INTEGER},",
          "customers = #{customers,jdbcType=VARCHAR},",
          "customers_name = #{customersName,jdbcType=VARCHAR},",
          "country = #{country,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "shipping_id = #{shippingId,jdbcType=TINYINT},",
          "shipping_name = #{shippingName,jdbcType=VARCHAR},",
          "shipping_no = #{shippingNo,jdbcType=VARCHAR},",
          "shipping_status = #{shippingStatus,jdbcType=INTEGER},",
          "order_price = #{orderPrice,jdbcType=DECIMAL},",
          "goods_price = #{goodsPrice,jdbcType=DECIMAL},",
          "actual_price = #{actualPrice,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(OrderGoods record);
}