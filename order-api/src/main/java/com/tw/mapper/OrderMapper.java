package com.tw.mapper;

import com.tw.model.Order;
import com.tw.model.OrderCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderSqlProvider.class, method="countByExample")
    long countByExample(OrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @DeleteProvider(type=OrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(OrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @Delete({
        "delete from twshop_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @Insert({
        "insert into twshop_order (id, order_sn, ",
        "user_id, order_status, ",
        "shipping_status, pay_status, ",
        "consignee, country, ",
        "province, city, ",
        "district, address, ",
        "mobile, postscript, ",
        "shipping_id, shipping_name, ",
        "pay_id, pay_name, ",
        "shipping_fee, actual_price, ",
        "integral, integral_money, ",
        "order_price, goods_price, ",
        "add_time, confirm_time, ",
        "pay_time, freight_price, ",
        "coupon_id, parent_id, ",
        "coupon_price, callback_status, ",
        "shipping_no, full_cut_price, ",
        "order_type, brand_id, ",
        "settlement_total_fee, all_price, ",
        "all_order_id, promoter_id, ",
        "brokerage)",
        "values (#{id,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, ",
        "#{shippingStatus,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, ",
        "#{consignee,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, ",
        "#{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, ",
        "#{district,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{postscript,jdbcType=VARCHAR}, ",
        "#{shippingId,jdbcType=TINYINT}, #{shippingName,jdbcType=VARCHAR}, ",
        "#{payId,jdbcType=VARCHAR}, #{payName,jdbcType=VARCHAR}, ",
        "#{shippingFee,jdbcType=DECIMAL}, #{actualPrice,jdbcType=DECIMAL}, ",
        "#{integral,jdbcType=INTEGER}, #{integralMoney,jdbcType=DECIMAL}, ",
        "#{orderPrice,jdbcType=DECIMAL}, #{goodsPrice,jdbcType=DECIMAL}, ",
        "#{addTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, ",
        "#{payTime,jdbcType=TIMESTAMP}, #{freightPrice,jdbcType=INTEGER}, ",
        "#{couponId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, ",
        "#{couponPrice,jdbcType=DECIMAL}, #{callbackStatus,jdbcType=CHAR}, ",
        "#{shippingNo,jdbcType=VARCHAR}, #{fullCutPrice,jdbcType=DECIMAL}, ",
        "#{orderType,jdbcType=VARCHAR}, #{brandId,jdbcType=INTEGER}, ",
        "#{settlementTotalFee,jdbcType=INTEGER}, #{allPrice,jdbcType=DECIMAL}, ",
        "#{allOrderId,jdbcType=VARCHAR}, #{promoterId,jdbcType=INTEGER}, ",
        "#{brokerage,jdbcType=DECIMAL})"
    })
    int insert(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @InsertProvider(type=OrderSqlProvider.class, method="insertSelective")
    int insertSelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_sn", property="orderSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_status", property="orderStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="postscript", property="postscript", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_id", property="payId", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_name", property="payName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_fee", property="shippingFee", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="integral", property="integral", jdbcType=JdbcType.INTEGER),
        @Result(column="integral_money", property="integralMoney", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="add_time", property="addTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="confirm_time", property="confirmTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="freight_price", property="freightPrice", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_id", property="couponId", jdbcType=JdbcType.INTEGER),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_price", property="couponPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.CHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="full_cut_price", property="fullCutPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="settlement_total_fee", property="settlementTotalFee", jdbcType=JdbcType.INTEGER),
        @Result(column="all_price", property="allPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="all_order_id", property="allOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="promoter_id", property="promoterId", jdbcType=JdbcType.INTEGER),
        @Result(column="brokerage", property="brokerage", jdbcType=JdbcType.DECIMAL)
    })
    List<Order> selectByExampleWithRowbounds(OrderCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @SelectProvider(type=OrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_sn", property="orderSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_status", property="orderStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="postscript", property="postscript", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_id", property="payId", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_name", property="payName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_fee", property="shippingFee", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="integral", property="integral", jdbcType=JdbcType.INTEGER),
        @Result(column="integral_money", property="integralMoney", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="add_time", property="addTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="confirm_time", property="confirmTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="freight_price", property="freightPrice", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_id", property="couponId", jdbcType=JdbcType.INTEGER),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_price", property="couponPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.CHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="full_cut_price", property="fullCutPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="settlement_total_fee", property="settlementTotalFee", jdbcType=JdbcType.INTEGER),
        @Result(column="all_price", property="allPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="all_order_id", property="allOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="promoter_id", property="promoterId", jdbcType=JdbcType.INTEGER),
        @Result(column="brokerage", property="brokerage", jdbcType=JdbcType.DECIMAL)
    })
    List<Order> selectByExample(OrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, order_sn, user_id, order_status, shipping_status, pay_status, consignee, ",
        "country, province, city, district, address, mobile, postscript, shipping_id, ",
        "shipping_name, pay_id, pay_name, shipping_fee, actual_price, integral, integral_money, ",
        "order_price, goods_price, add_time, confirm_time, pay_time, freight_price, coupon_id, ",
        "parent_id, coupon_price, callback_status, shipping_no, full_cut_price, order_type, ",
        "brand_id, settlement_total_fee, all_price, all_order_id, promoter_id, brokerage",
        "from twshop_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_sn", property="orderSn", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_status", property="orderStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="shipping_status", property="shippingStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="country", property="country", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.VARCHAR),
        @Result(column="city", property="city", jdbcType=JdbcType.VARCHAR),
        @Result(column="district", property="district", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="postscript", property="postscript", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_id", property="shippingId", jdbcType=JdbcType.TINYINT),
        @Result(column="shipping_name", property="shippingName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_id", property="payId", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_name", property="payName", jdbcType=JdbcType.VARCHAR),
        @Result(column="shipping_fee", property="shippingFee", jdbcType=JdbcType.DECIMAL),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="integral", property="integral", jdbcType=JdbcType.INTEGER),
        @Result(column="integral_money", property="integralMoney", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_price", property="goodsPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="add_time", property="addTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="confirm_time", property="confirmTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="freight_price", property="freightPrice", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_id", property="couponId", jdbcType=JdbcType.INTEGER),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.INTEGER),
        @Result(column="coupon_price", property="couponPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.CHAR),
        @Result(column="shipping_no", property="shippingNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="full_cut_price", property="fullCutPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.INTEGER),
        @Result(column="settlement_total_fee", property="settlementTotalFee", jdbcType=JdbcType.INTEGER),
        @Result(column="all_price", property="allPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="all_order_id", property="allOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="promoter_id", property="promoterId", jdbcType=JdbcType.INTEGER),
        @Result(column="brokerage", property="brokerage", jdbcType=JdbcType.DECIMAL)
    })
    Order selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Order record, @Param("example") OrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Order record, @Param("example") OrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_order
     *
     * @mbg.generated
     */
    @Update({
        "update twshop_order",
        "set order_sn = #{orderSn,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "order_status = #{orderStatus,jdbcType=INTEGER},",
          "shipping_status = #{shippingStatus,jdbcType=INTEGER},",
          "pay_status = #{payStatus,jdbcType=INTEGER},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "country = #{country,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=VARCHAR},",
          "city = #{city,jdbcType=VARCHAR},",
          "district = #{district,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "postscript = #{postscript,jdbcType=VARCHAR},",
          "shipping_id = #{shippingId,jdbcType=TINYINT},",
          "shipping_name = #{shippingName,jdbcType=VARCHAR},",
          "pay_id = #{payId,jdbcType=VARCHAR},",
          "pay_name = #{payName,jdbcType=VARCHAR},",
          "shipping_fee = #{shippingFee,jdbcType=DECIMAL},",
          "actual_price = #{actualPrice,jdbcType=DECIMAL},",
          "integral = #{integral,jdbcType=INTEGER},",
          "integral_money = #{integralMoney,jdbcType=DECIMAL},",
          "order_price = #{orderPrice,jdbcType=DECIMAL},",
          "goods_price = #{goodsPrice,jdbcType=DECIMAL},",
          "add_time = #{addTime,jdbcType=TIMESTAMP},",
          "confirm_time = #{confirmTime,jdbcType=TIMESTAMP},",
          "pay_time = #{payTime,jdbcType=TIMESTAMP},",
          "freight_price = #{freightPrice,jdbcType=INTEGER},",
          "coupon_id = #{couponId,jdbcType=INTEGER},",
          "parent_id = #{parentId,jdbcType=INTEGER},",
          "coupon_price = #{couponPrice,jdbcType=DECIMAL},",
          "callback_status = #{callbackStatus,jdbcType=CHAR},",
          "shipping_no = #{shippingNo,jdbcType=VARCHAR},",
          "full_cut_price = #{fullCutPrice,jdbcType=DECIMAL},",
          "order_type = #{orderType,jdbcType=VARCHAR},",
          "brand_id = #{brandId,jdbcType=INTEGER},",
          "settlement_total_fee = #{settlementTotalFee,jdbcType=INTEGER},",
          "all_price = #{allPrice,jdbcType=DECIMAL},",
          "all_order_id = #{allOrderId,jdbcType=VARCHAR},",
          "promoter_id = #{promoterId,jdbcType=INTEGER},",
          "brokerage = #{brokerage,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Order record);
}