package com.tw.mapper;

import com.tw.model.Goods;
import com.tw.model.GoodsCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface GoodsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=GoodsSqlProvider.class, method="countByExample")
    long countByExample(GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @DeleteProvider(type=GoodsSqlProvider.class, method="deleteByExample")
    int deleteByExample(GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @Delete({
        "delete from twshop_goods",
        "where goods_id = #{goodsId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String goodsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @Insert({
        "insert into twshop_goods (goods_id, first_cat_id, ",
        "second_cat_id, third_cat_id, ",
        "supplier_id, supplier_name, ",
        "template_id, goods_name, ",
        "jingle, real_sale_num, ",
        "sham_sale_num, online_status, ",
        "single_status, storage_num, ",
        "fav_num, label_price, ",
        "market_price, cost_price, ",
        "goods_img, goods_code, ",
        "weight, goods_type, ",
        "remark, video_url, ",
        "video_name, cover_name, ",
        "cover_url, file_id, ",
        "brand_id, column_id, ",
        "qrcode_url, sort, ",
        "sku_key_value, create_time, ",
        "update_time, keywords, ",
        "goods_brief, hot_status, ",
        "goods_desc)",
        "values (#{goodsId,jdbcType=VARCHAR}, #{firstCatId,jdbcType=VARCHAR}, ",
        "#{secondCatId,jdbcType=VARCHAR}, #{thirdCatId,jdbcType=VARCHAR}, ",
        "#{supplierId,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, ",
        "#{templateId,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, ",
        "#{jingle,jdbcType=VARCHAR}, #{realSaleNum,jdbcType=BIGINT}, ",
        "#{shamSaleNum,jdbcType=BIGINT}, #{onlineStatus,jdbcType=CHAR}, ",
        "#{singleStatus,jdbcType=CHAR}, #{storageNum,jdbcType=INTEGER}, ",
        "#{favNum,jdbcType=INTEGER}, #{labelPrice,jdbcType=DECIMAL}, ",
        "#{marketPrice,jdbcType=DECIMAL}, #{costPrice,jdbcType=DECIMAL}, ",
        "#{goodsImg,jdbcType=VARCHAR}, #{goodsCode,jdbcType=VARCHAR}, ",
        "#{weight,jdbcType=DECIMAL}, #{goodsType,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR}, #{videoUrl,jdbcType=VARCHAR}, ",
        "#{videoName,jdbcType=VARCHAR}, #{coverName,jdbcType=VARCHAR}, ",
        "#{coverUrl,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, ",
        "#{brandId,jdbcType=VARCHAR}, #{columnId,jdbcType=VARCHAR}, ",
        "#{qrcodeUrl,jdbcType=VARCHAR}, #{sort,jdbcType=BIGINT}, ",
        "#{skuKeyValue,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{keywords,jdbcType=VARCHAR}, ",
        "#{goodsBrief,jdbcType=VARCHAR}, #{hotStatus,jdbcType=CHAR}, ",
        "#{goodsDesc,jdbcType=LONGVARCHAR})"
    })
    int insert(Goods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @InsertProvider(type=GoodsSqlProvider.class, method="insertSelective")
    int insertSelective(Goods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=GoodsSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_cat_id", property="firstCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="second_cat_id", property="secondCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_cat_id", property="thirdCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_id", property="supplierId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="template_id", property="templateId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jingle", property="jingle", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_sale_num", property="realSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="sham_sale_num", property="shamSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.CHAR),
        @Result(column="single_status", property="singleStatus", jdbcType=JdbcType.CHAR),
        @Result(column="storage_num", property="storageNum", jdbcType=JdbcType.INTEGER),
        @Result(column="fav_num", property="favNum", jdbcType=JdbcType.INTEGER),
        @Result(column="label_price", property="labelPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_img", property="goodsImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_code", property="goodsCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_type", property="goodsType", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_url", property="videoUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_name", property="videoName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_name", property="coverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_url", property="coverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="file_id", property="fileId", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.VARCHAR),
        @Result(column="column_id", property="columnId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qrcode_url", property="qrcodeUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.BIGINT),
        @Result(column="sku_key_value", property="skuKeyValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="keywords", property="keywords", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_brief", property="goodsBrief", jdbcType=JdbcType.VARCHAR),
        @Result(column="hot_status", property="hotStatus", jdbcType=JdbcType.CHAR),
        @Result(column="goods_desc", property="goodsDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Goods> selectByExampleWithBLOBsWithRowbounds(GoodsCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=GoodsSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_cat_id", property="firstCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="second_cat_id", property="secondCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_cat_id", property="thirdCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_id", property="supplierId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="template_id", property="templateId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jingle", property="jingle", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_sale_num", property="realSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="sham_sale_num", property="shamSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.CHAR),
        @Result(column="single_status", property="singleStatus", jdbcType=JdbcType.CHAR),
        @Result(column="storage_num", property="storageNum", jdbcType=JdbcType.INTEGER),
        @Result(column="fav_num", property="favNum", jdbcType=JdbcType.INTEGER),
        @Result(column="label_price", property="labelPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_img", property="goodsImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_code", property="goodsCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_type", property="goodsType", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_url", property="videoUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_name", property="videoName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_name", property="coverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_url", property="coverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="file_id", property="fileId", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.VARCHAR),
        @Result(column="column_id", property="columnId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qrcode_url", property="qrcodeUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.BIGINT),
        @Result(column="sku_key_value", property="skuKeyValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="keywords", property="keywords", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_brief", property="goodsBrief", jdbcType=JdbcType.VARCHAR),
        @Result(column="hot_status", property="hotStatus", jdbcType=JdbcType.CHAR),
        @Result(column="goods_desc", property="goodsDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Goods> selectByExampleWithBLOBs(GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=GoodsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_cat_id", property="firstCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="second_cat_id", property="secondCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_cat_id", property="thirdCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_id", property="supplierId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="template_id", property="templateId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jingle", property="jingle", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_sale_num", property="realSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="sham_sale_num", property="shamSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.CHAR),
        @Result(column="single_status", property="singleStatus", jdbcType=JdbcType.CHAR),
        @Result(column="storage_num", property="storageNum", jdbcType=JdbcType.INTEGER),
        @Result(column="fav_num", property="favNum", jdbcType=JdbcType.INTEGER),
        @Result(column="label_price", property="labelPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_img", property="goodsImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_code", property="goodsCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_type", property="goodsType", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_url", property="videoUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_name", property="videoName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_name", property="coverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_url", property="coverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="file_id", property="fileId", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.VARCHAR),
        @Result(column="column_id", property="columnId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qrcode_url", property="qrcodeUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.BIGINT),
        @Result(column="sku_key_value", property="skuKeyValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="keywords", property="keywords", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_brief", property="goodsBrief", jdbcType=JdbcType.VARCHAR),
        @Result(column="hot_status", property="hotStatus", jdbcType=JdbcType.CHAR)
    })
    List<Goods> selectByExampleWithRowbounds(GoodsCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @SelectProvider(type=GoodsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_cat_id", property="firstCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="second_cat_id", property="secondCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_cat_id", property="thirdCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_id", property="supplierId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="template_id", property="templateId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jingle", property="jingle", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_sale_num", property="realSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="sham_sale_num", property="shamSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.CHAR),
        @Result(column="single_status", property="singleStatus", jdbcType=JdbcType.CHAR),
        @Result(column="storage_num", property="storageNum", jdbcType=JdbcType.INTEGER),
        @Result(column="fav_num", property="favNum", jdbcType=JdbcType.INTEGER),
        @Result(column="label_price", property="labelPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_img", property="goodsImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_code", property="goodsCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_type", property="goodsType", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_url", property="videoUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_name", property="videoName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_name", property="coverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_url", property="coverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="file_id", property="fileId", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.VARCHAR),
        @Result(column="column_id", property="columnId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qrcode_url", property="qrcodeUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.BIGINT),
        @Result(column="sku_key_value", property="skuKeyValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="keywords", property="keywords", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_brief", property="goodsBrief", jdbcType=JdbcType.VARCHAR),
        @Result(column="hot_status", property="hotStatus", jdbcType=JdbcType.CHAR)
    })
    List<Goods> selectByExample(GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "goods_id, first_cat_id, second_cat_id, third_cat_id, supplier_id, supplier_name, ",
        "template_id, goods_name, jingle, real_sale_num, sham_sale_num, online_status, ",
        "single_status, storage_num, fav_num, label_price, market_price, cost_price, ",
        "goods_img, goods_code, weight, goods_type, remark, video_url, video_name, cover_name, ",
        "cover_url, file_id, brand_id, column_id, qrcode_url, sort, sku_key_value, create_time, ",
        "update_time, keywords, goods_brief, hot_status, goods_desc",
        "from twshop_goods",
        "where goods_id = #{goodsId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="first_cat_id", property="firstCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="second_cat_id", property="secondCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_cat_id", property="thirdCatId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_id", property="supplierId", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_name", property="supplierName", jdbcType=JdbcType.VARCHAR),
        @Result(column="template_id", property="templateId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="jingle", property="jingle", jdbcType=JdbcType.VARCHAR),
        @Result(column="real_sale_num", property="realSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="sham_sale_num", property="shamSaleNum", jdbcType=JdbcType.BIGINT),
        @Result(column="online_status", property="onlineStatus", jdbcType=JdbcType.CHAR),
        @Result(column="single_status", property="singleStatus", jdbcType=JdbcType.CHAR),
        @Result(column="storage_num", property="storageNum", jdbcType=JdbcType.INTEGER),
        @Result(column="fav_num", property="favNum", jdbcType=JdbcType.INTEGER),
        @Result(column="label_price", property="labelPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_img", property="goodsImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_code", property="goodsCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DECIMAL),
        @Result(column="goods_type", property="goodsType", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_url", property="videoUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="video_name", property="videoName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_name", property="coverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cover_url", property="coverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="file_id", property="fileId", jdbcType=JdbcType.VARCHAR),
        @Result(column="brand_id", property="brandId", jdbcType=JdbcType.VARCHAR),
        @Result(column="column_id", property="columnId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qrcode_url", property="qrcodeUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.BIGINT),
        @Result(column="sku_key_value", property="skuKeyValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="keywords", property="keywords", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_brief", property="goodsBrief", jdbcType=JdbcType.VARCHAR),
        @Result(column="hot_status", property="hotStatus", jdbcType=JdbcType.CHAR),
        @Result(column="goods_desc", property="goodsDesc", jdbcType=JdbcType.LONGVARCHAR)
    })
    Goods selectByPrimaryKey(String goodsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=GoodsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Goods record, @Param("example") GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=GoodsSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") Goods record, @Param("example") GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=GoodsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Goods record, @Param("example") GoodsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @UpdateProvider(type=GoodsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Goods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @Update({
        "update twshop_goods",
        "set first_cat_id = #{firstCatId,jdbcType=VARCHAR},",
          "second_cat_id = #{secondCatId,jdbcType=VARCHAR},",
          "third_cat_id = #{thirdCatId,jdbcType=VARCHAR},",
          "supplier_id = #{supplierId,jdbcType=VARCHAR},",
          "supplier_name = #{supplierName,jdbcType=VARCHAR},",
          "template_id = #{templateId,jdbcType=VARCHAR},",
          "goods_name = #{goodsName,jdbcType=VARCHAR},",
          "jingle = #{jingle,jdbcType=VARCHAR},",
          "real_sale_num = #{realSaleNum,jdbcType=BIGINT},",
          "sham_sale_num = #{shamSaleNum,jdbcType=BIGINT},",
          "online_status = #{onlineStatus,jdbcType=CHAR},",
          "single_status = #{singleStatus,jdbcType=CHAR},",
          "storage_num = #{storageNum,jdbcType=INTEGER},",
          "fav_num = #{favNum,jdbcType=INTEGER},",
          "label_price = #{labelPrice,jdbcType=DECIMAL},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "cost_price = #{costPrice,jdbcType=DECIMAL},",
          "goods_img = #{goodsImg,jdbcType=VARCHAR},",
          "goods_code = #{goodsCode,jdbcType=VARCHAR},",
          "weight = #{weight,jdbcType=DECIMAL},",
          "goods_type = #{goodsType,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "video_url = #{videoUrl,jdbcType=VARCHAR},",
          "video_name = #{videoName,jdbcType=VARCHAR},",
          "cover_name = #{coverName,jdbcType=VARCHAR},",
          "cover_url = #{coverUrl,jdbcType=VARCHAR},",
          "file_id = #{fileId,jdbcType=VARCHAR},",
          "brand_id = #{brandId,jdbcType=VARCHAR},",
          "column_id = #{columnId,jdbcType=VARCHAR},",
          "qrcode_url = #{qrcodeUrl,jdbcType=VARCHAR},",
          "sort = #{sort,jdbcType=BIGINT},",
          "sku_key_value = #{skuKeyValue,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "keywords = #{keywords,jdbcType=VARCHAR},",
          "goods_brief = #{goodsBrief,jdbcType=VARCHAR},",
          "hot_status = #{hotStatus,jdbcType=CHAR},",
          "goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR}",
        "where goods_id = #{goodsId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(Goods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table twshop_goods
     *
     * @mbg.generated
     */
    @Update({
        "update twshop_goods",
        "set first_cat_id = #{firstCatId,jdbcType=VARCHAR},",
          "second_cat_id = #{secondCatId,jdbcType=VARCHAR},",
          "third_cat_id = #{thirdCatId,jdbcType=VARCHAR},",
          "supplier_id = #{supplierId,jdbcType=VARCHAR},",
          "supplier_name = #{supplierName,jdbcType=VARCHAR},",
          "template_id = #{templateId,jdbcType=VARCHAR},",
          "goods_name = #{goodsName,jdbcType=VARCHAR},",
          "jingle = #{jingle,jdbcType=VARCHAR},",
          "real_sale_num = #{realSaleNum,jdbcType=BIGINT},",
          "sham_sale_num = #{shamSaleNum,jdbcType=BIGINT},",
          "online_status = #{onlineStatus,jdbcType=CHAR},",
          "single_status = #{singleStatus,jdbcType=CHAR},",
          "storage_num = #{storageNum,jdbcType=INTEGER},",
          "fav_num = #{favNum,jdbcType=INTEGER},",
          "label_price = #{labelPrice,jdbcType=DECIMAL},",
          "market_price = #{marketPrice,jdbcType=DECIMAL},",
          "cost_price = #{costPrice,jdbcType=DECIMAL},",
          "goods_img = #{goodsImg,jdbcType=VARCHAR},",
          "goods_code = #{goodsCode,jdbcType=VARCHAR},",
          "weight = #{weight,jdbcType=DECIMAL},",
          "goods_type = #{goodsType,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "video_url = #{videoUrl,jdbcType=VARCHAR},",
          "video_name = #{videoName,jdbcType=VARCHAR},",
          "cover_name = #{coverName,jdbcType=VARCHAR},",
          "cover_url = #{coverUrl,jdbcType=VARCHAR},",
          "file_id = #{fileId,jdbcType=VARCHAR},",
          "brand_id = #{brandId,jdbcType=VARCHAR},",
          "column_id = #{columnId,jdbcType=VARCHAR},",
          "qrcode_url = #{qrcodeUrl,jdbcType=VARCHAR},",
          "sort = #{sort,jdbcType=BIGINT},",
          "sku_key_value = #{skuKeyValue,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "keywords = #{keywords,jdbcType=VARCHAR},",
          "goods_brief = #{goodsBrief,jdbcType=VARCHAR},",
          "hot_status = #{hotStatus,jdbcType=CHAR}",
        "where goods_id = #{goodsId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Goods record);
}